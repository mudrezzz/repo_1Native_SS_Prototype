/*Copyright (c) 2017-2018 auditorius.ru All Rights Reserved.
 This software is the confidential and proprietary information of auditorius.ru You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with auditorius.ru*/
package com.repo_1native_ss_prototype.fn_service_db;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.List;
import java.util.Objects;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;

/**
 * Publisher generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`PUBLISHER`")
public class Publisher implements Serializable {

    private Integer id;
    private int balance;
    private float _1nComission;
    private List<Advertiser> advertisers;
    private List<AdvPaymentHistory> advPaymentHistories;
    private List<Campaign> campaigns;
    private List<PubPaymentHistory> pubPaymentHistories;
    private List<Sites> siteses;
    private List<Tags> tagses;
    private List<Users> userses;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`ID`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`balance`", nullable = false, scale = 0, precision = 10)
    public int getBalance() {
        return this.balance;
    }

    public void setBalance(int balance) {
        this.balance = balance;
    }

    @Column(name = "`1n_comission`", nullable = false, scale = 2, precision = 10)
    public float get_1nComission() {
        return this._1nComission;
    }

    public void set_1nComission(float _1nComission) {
        this._1nComission = _1nComission;
    }

    @JsonInclude(Include.NON_EMPTY)
    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.REMOVE, mappedBy = "publisher")
    public List<Advertiser> getAdvertisers() {
        return this.advertisers;
    }

    public void setAdvertisers(List<Advertiser> advertisers) {
        this.advertisers = advertisers;
    }

    @JsonInclude(Include.NON_EMPTY)
    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.REMOVE, mappedBy = "publisher")
    public List<AdvPaymentHistory> getAdvPaymentHistories() {
        return this.advPaymentHistories;
    }

    public void setAdvPaymentHistories(List<AdvPaymentHistory> advPaymentHistories) {
        this.advPaymentHistories = advPaymentHistories;
    }

    @JsonInclude(Include.NON_EMPTY)
    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.REMOVE, mappedBy = "publisher")
    public List<Campaign> getCampaigns() {
        return this.campaigns;
    }

    public void setCampaigns(List<Campaign> campaigns) {
        this.campaigns = campaigns;
    }

    @JsonInclude(Include.NON_EMPTY)
    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.REMOVE, mappedBy = "publisher")
    public List<PubPaymentHistory> getPubPaymentHistories() {
        return this.pubPaymentHistories;
    }

    public void setPubPaymentHistories(List<PubPaymentHistory> pubPaymentHistories) {
        this.pubPaymentHistories = pubPaymentHistories;
    }

    @JsonInclude(Include.NON_EMPTY)
    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.REMOVE, mappedBy = "publisher")
    public List<Sites> getSiteses() {
        return this.siteses;
    }

    public void setSiteses(List<Sites> siteses) {
        this.siteses = siteses;
    }

    @JsonInclude(Include.NON_EMPTY)
    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.REMOVE, mappedBy = "publisher")
    public List<Tags> getTagses() {
        return this.tagses;
    }

    public void setTagses(List<Tags> tagses) {
        this.tagses = tagses;
    }

    @JsonInclude(Include.NON_EMPTY)
    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.REMOVE, mappedBy = "publisher")
    public List<Users> getUserses() {
        return this.userses;
    }

    public void setUserses(List<Users> userses) {
        this.userses = userses;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Publisher)) return false;
        final Publisher publisher = (Publisher) o;
        return Objects.equals(getId(), publisher.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}

