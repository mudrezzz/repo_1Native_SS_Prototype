/*Copyright (c) 2017-2018 auditorius.ru All Rights Reserved.
 This software is the confidential and proprietary information of auditorius.ru You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with auditorius.ru*/

package com.repo_1native_ss_prototype.fn_service_db.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.util.HashMap;
import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.wavemaker.runtime.data.dao.query.WMQueryExecutor;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.file.model.Downloadable;

import com.repo_1native_ss_prototype.fn_service_db.models.query.*;

@Service
public class FN_Service_dbQueryExecutorServiceImpl implements FN_Service_dbQueryExecutorService {

    private static final Logger LOGGER = LoggerFactory.getLogger(FN_Service_dbQueryExecutorServiceImpl.class);

    @Autowired
    @Qualifier("FN_Service_dbWMQueryExecutor")
    private WMQueryExecutor queryExecutor;

    @Transactional(readOnly = true, value = "FN_Service_dbTransactionManager")
    @Override
    public Page<StatsByDaysResponse> executeStats_by_days(Integer period, Pageable pageable) {
        Map params = new HashMap(1);

        params.put("period", period);

        return queryExecutor.executeNamedQuery("stats_by_days", params, StatsByDaysResponse.class, pageable);
    }

    @Transactional(readOnly = true, value = "FN_Service_dbTransactionManager")
    @Override
    public Downloadable exportStats_by_days(ExportType exportType, Integer period, Pageable pageable) {
        Map params = new HashMap(1);

        params.put("period", period);

        return queryExecutor.exportNamedQueryData("stats_by_days", params, exportType, StatsByDaysResponse.class, pageable);
    }

}


