/*Copyright (c) 2017-2018 auditorius.ru All Rights Reserved.
 This software is the confidential and proprietary information of auditorius.ru You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with auditorius.ru*/
package com.repo_1native_ss_prototype.fn_service_db;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.sql.Date;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * StatsDays generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`STATS_DAYS`")
public class StatsDays implements Serializable {

    private Integer id;
    private int campaignId;
    private Date date;
    private int adsId;
    private int tagId;
    private float summ;
    private Integer osId;
    private Integer browserId;
    private Integer deviceId;
    private int impressions;
    private int clicks;
    private int conversions;
    private Tags tags;
    private OsDictionary osDictionary;
    private Campaign campaign;
    private BrowserDictionary browserDictionary;
    private Ads ads;
    private DeviceDictionary deviceDictionary;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`ID`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`campaign_id`", nullable = false, scale = 0, precision = 10)
    public int getCampaignId() {
        return this.campaignId;
    }

    public void setCampaignId(int campaignId) {
        this.campaignId = campaignId;
    }

    @Column(name = "`date`", nullable = false)
    public Date getDate() {
        return this.date;
    }

    public void setDate(Date date) {
        this.date = date;
    }

    @Column(name = "`ads_id`", nullable = false, scale = 0, precision = 10)
    public int getAdsId() {
        return this.adsId;
    }

    public void setAdsId(int adsId) {
        this.adsId = adsId;
    }

    @Column(name = "`tag_id`", nullable = false, scale = 0, precision = 10)
    public int getTagId() {
        return this.tagId;
    }

    public void setTagId(int tagId) {
        this.tagId = tagId;
    }

    @Column(name = "`summ`", nullable = false, scale = 2, precision = 10)
    public float getSumm() {
        return this.summ;
    }

    public void setSumm(float summ) {
        this.summ = summ;
    }

    @Column(name = "`os_id`", nullable = true, scale = 0, precision = 10)
    public Integer getOsId() {
        return this.osId;
    }

    public void setOsId(Integer osId) {
        this.osId = osId;
    }

    @Column(name = "`browser_id`", nullable = true, scale = 0, precision = 10)
    public Integer getBrowserId() {
        return this.browserId;
    }

    public void setBrowserId(Integer browserId) {
        this.browserId = browserId;
    }

    @Column(name = "`device_id`", nullable = true, scale = 0, precision = 10)
    public Integer getDeviceId() {
        return this.deviceId;
    }

    public void setDeviceId(Integer deviceId) {
        this.deviceId = deviceId;
    }

    @Column(name = "`impressions`", nullable = false, scale = 0, precision = 10)
    public int getImpressions() {
        return this.impressions;
    }

    public void setImpressions(int impressions) {
        this.impressions = impressions;
    }

    @Column(name = "`clicks`", nullable = false, scale = 0, precision = 10)
    public int getClicks() {
        return this.clicks;
    }

    public void setClicks(int clicks) {
        this.clicks = clicks;
    }

    @Column(name = "`conversions`", nullable = false, scale = 0, precision = 10)
    public int getConversions() {
        return this.conversions;
    }

    public void setConversions(int conversions) {
        this.conversions = conversions;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`tag_id`", referencedColumnName = "`ID`", insertable = false, updatable = false)
    public Tags getTags() {
        return this.tags;
    }

    public void setTags(Tags tags) {
        if(tags != null) {
            this.tagId = tags.getId();
        }

        this.tags = tags;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`os_id`", referencedColumnName = "`ID`", insertable = false, updatable = false)
    public OsDictionary getOsDictionary() {
        return this.osDictionary;
    }

    public void setOsDictionary(OsDictionary osDictionary) {
        if(osDictionary != null) {
            this.osId = osDictionary.getId();
        }

        this.osDictionary = osDictionary;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`campaign_id`", referencedColumnName = "`ID`", insertable = false, updatable = false)
    public Campaign getCampaign() {
        return this.campaign;
    }

    public void setCampaign(Campaign campaign) {
        if(campaign != null) {
            this.campaignId = campaign.getId();
        }

        this.campaign = campaign;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`browser_id`", referencedColumnName = "`ID`", insertable = false, updatable = false)
    public BrowserDictionary getBrowserDictionary() {
        return this.browserDictionary;
    }

    public void setBrowserDictionary(BrowserDictionary browserDictionary) {
        if(browserDictionary != null) {
            this.browserId = browserDictionary.getId();
        }

        this.browserDictionary = browserDictionary;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`ads_id`", referencedColumnName = "`ID`", insertable = false, updatable = false)
    public Ads getAds() {
        return this.ads;
    }

    public void setAds(Ads ads) {
        if(ads != null) {
            this.adsId = ads.getId();
        }

        this.ads = ads;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`device_id`", referencedColumnName = "`ID`", insertable = false, updatable = false)
    public DeviceDictionary getDeviceDictionary() {
        return this.deviceDictionary;
    }

    public void setDeviceDictionary(DeviceDictionary deviceDictionary) {
        if(deviceDictionary != null) {
            this.deviceId = deviceDictionary.getId();
        }

        this.deviceDictionary = deviceDictionary;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof StatsDays)) return false;
        final StatsDays statsDays = (StatsDays) o;
        return Objects.equals(getId(), statsDays.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}

