/*Copyright (c) 2017-2018 auditorius.ru All Rights Reserved.
 This software is the confidential and proprietary information of auditorius.ru You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with auditorius.ru*/

package com.repo_1native_ss_prototype.fn_service_db.controller;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.util.HashMap;
import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.wavemaker.runtime.data.dao.query.WMQueryExecutor;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.file.model.Downloadable;
import com.wavemaker.tools.api.core.annotations.WMAccessVisibility;
import com.wavemaker.tools.api.core.models.AccessSpecifier;
import com.wordnik.swagger.annotations.Api;
import com.wordnik.swagger.annotations.ApiOperation;

import com.repo_1native_ss_prototype.fn_service_db.service.FN_Service_dbQueryExecutorService;
import com.repo_1native_ss_prototype.fn_service_db.models.query.*;

@RestController(value = "FN_Service_db.QueryExecutionController")
@RequestMapping("/FN_Service_db/queryExecutor")
@Api(value = "QueryExecutionController", description = "controller class for query execution")
public class QueryExecutionController {

    private static final Logger LOGGER = LoggerFactory.getLogger(QueryExecutionController.class);

    @Autowired
    private FN_Service_dbQueryExecutorService queryService;

    @RequestMapping(value = "/queries/stats_by_days", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "stats by days")
    public Page<StatsByDaysResponse> executeStats_by_days(@RequestParam(value = "period") Integer period, Pageable pageable) {
        LOGGER.debug("Executing named query: stats_by_days");
        Page<StatsByDaysResponse> _result = queryService.executeStats_by_days(period, pageable);
        LOGGER.debug("got the result for named query: stats_by_days, result:{}", _result);
        return _result;
    }

    @ApiOperation(value = "Returns downloadable file for query stats_by_days")
    @RequestMapping(value = "/queries/stats_by_days/export/{exportType}", method = RequestMethod.GET, produces = "application/octet-stream")
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    public Downloadable exportStats_by_days(@PathVariable("exportType") ExportType exportType, @RequestParam(value = "period") Integer period, Pageable pageable) {
        LOGGER.debug("Exporting named query: stats_by_days");

        return queryService.exportStats_by_days(exportType, period, pageable);
    }

}


