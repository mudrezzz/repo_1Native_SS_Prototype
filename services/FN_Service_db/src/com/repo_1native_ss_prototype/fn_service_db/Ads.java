/*Copyright (c) 2017-2018 auditorius.ru All Rights Reserved.
 This software is the confidential and proprietary information of auditorius.ru You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with auditorius.ru*/
package com.repo_1native_ss_prototype.fn_service_db;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.List;
import java.util.Objects;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;

/**
 * Ads generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`ADS`")
public class Ads implements Serializable {

    private Integer id;
    private String brandName;
    private Integer campaignId;
    private String largeThumbnailUrl;
    private String logoUrl;
    private String smallThumbnailUrl;
    private Integer status;
    private String text;
    private String title;
    private Campaign campaign;
    private List<StatsDays> statsDayses;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`ID`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`brand_name`", nullable = false, length = 255)
    public String getBrandName() {
        return this.brandName;
    }

    public void setBrandName(String brandName) {
        this.brandName = brandName;
    }

    @Column(name = "`campaign_id`", nullable = true, scale = 0, precision = 10)
    public Integer getCampaignId() {
        return this.campaignId;
    }

    public void setCampaignId(Integer campaignId) {
        this.campaignId = campaignId;
    }

    @Column(name = "`large_thumbnail_url`", nullable = true, length = 255)
    public String getLargeThumbnailUrl() {
        return this.largeThumbnailUrl;
    }

    public void setLargeThumbnailUrl(String largeThumbnailUrl) {
        this.largeThumbnailUrl = largeThumbnailUrl;
    }

    @Column(name = "`logo_url`", nullable = false, length = 255)
    public String getLogoUrl() {
        return this.logoUrl;
    }

    public void setLogoUrl(String logoUrl) {
        this.logoUrl = logoUrl;
    }

    @Column(name = "`small_thumbnail_url`", nullable = true, length = 255)
    public String getSmallThumbnailUrl() {
        return this.smallThumbnailUrl;
    }

    public void setSmallThumbnailUrl(String smallThumbnailUrl) {
        this.smallThumbnailUrl = smallThumbnailUrl;
    }

    @Column(name = "`status`", nullable = true, scale = 0, precision = 10)
    public Integer getStatus() {
        return this.status;
    }

    public void setStatus(Integer status) {
        this.status = status;
    }

    @Column(name = "`text`", nullable = false, length = 255)
    public String getText() {
        return this.text;
    }

    public void setText(String text) {
        this.text = text;
    }

    @Column(name = "`title`", nullable = false, length = 255)
    public String getTitle() {
        return this.title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`campaign_id`", referencedColumnName = "`ID`", insertable = false, updatable = false)
    public Campaign getCampaign() {
        return this.campaign;
    }

    public void setCampaign(Campaign campaign) {
        if(campaign != null) {
            this.campaignId = campaign.getId();
        }

        this.campaign = campaign;
    }

    @JsonInclude(Include.NON_EMPTY)
    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.REMOVE, mappedBy = "ads")
    public List<StatsDays> getStatsDayses() {
        return this.statsDayses;
    }

    public void setStatsDayses(List<StatsDays> statsDayses) {
        this.statsDayses = statsDayses;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Ads)) return false;
        final Ads ads = (Ads) o;
        return Objects.equals(getId(), ads.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}

